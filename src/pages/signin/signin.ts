import Block from "../../core/block";
import Handlebars from "handlebars";
import template from "./signin.hbs?raw";
import { Button } from "@components/index";

interface LoginPageProps {
  formState?: {
    login: string;
    password: string;
  };
  errors?: {
    login: string;
    password: string;
  };
  className?: string;
  button?: string;
}

export default class LoginPage extends Block<LoginPageProps> {
  constructor(props: LoginPageProps = {}) {
    const button = new Button({
      label: "–í–æ–π—Ç–∏",
      className: "123",
      onClick: (e) => {
        e.preventDefault();
        console.log("–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –í–æ–π—Ç–∏");
      },
    });
    
    console.log("–°–æ–∑–¥–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞:", button); // üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ä–µ–∫—Ç –∫–Ω–æ–ø–∫–∏
    console.log("–ö–æ–¥ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ render():", button.render()); // üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –∫–Ω–æ–ø–∫–∏
    

    super("div", {
      ...props,
      formState: {
        login: "",
        password: "",
      },
      errors: {
        login: "",
        password: "",
      },
      className: "container",
      button: button.render(),
    });
    console.log("this.props –ø–æ—Å–ª–µ super:", this.props);
  }

  public render(): string {
    console.log("–ü–µ—Ä–µ–¥–∞–µ–º –≤ —à–∞–±–ª–æ–Ω:", this.props);
  
    return Handlebars.compile(template)({
      ...this.props,
      button: this.props.button
    });

    
  }

  

}
